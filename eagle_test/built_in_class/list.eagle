var l = [1, 2, "3", "4", nil];
print l; // expected: [1, 2, "3", "4", Nil]

print l == [1, 2, "3", "4", nil]; // expected: true
print l == [1, 2, 3, "4", nil]; // expected: false
print l == [1, 2, "4", "3", nil]; // expected: false

print l ? "true" : "false"; // expected: true
print [] ? "true" : "false"; // expected: false

print l[0]; // expected: 1
print l[4]; // expected: Nil
print l[-2]; // expected: 4
print l[-5]; // expected: 1

l[1] = 9;
print l; // expected: [1, 9, "3", "4", Nil]
l[-2] = "eagle";
print l; // expected: [1, 9, "3", "eagle", Nil]

print l.size(); // expected: 5
print l.empty(); // expected: false
print [].empty(); // expected: true

l.append("xyz");
print l; // expected: [1, 9, "3", "eagle", Nil, "xyz"];

var ll = l;
ll.clear();
print ll; // expected: []
print l; // expected: []

l = [1, 2, 2, "3", "3", "3", [1, 2]];
print l.contains(2); // expected: true
print l.contains(3); // expected: false
print l.contains([1, 2]); // expected: true

print l.count(1); // expected: 1
print l.count(2); // expected: 2
print l.count("3"); // expected: 3
print l.count(3); // expected: 0

l = [1, 2, 3];
l.insert(0, 4);
print l; // expected: [4, 1, 2, 3]
l.insert(-2, 5);
print l; // expected: [4, 1, 5, 2, 3]
l.insert(10, 6);
print l; // expected: [4, 1, 5, 2, 3, 6]
l.insert(-10, 7);
print l; // expected: [7, 4, 1, 5, 2, 3, 6]

l = [1, 2, 1, 1];
l.remove(1);
print l; // expected: [2, 1, 1]
l.remove(1);
print l; // expected: [2, 1]
l.remove(3);
print l; // expected: [2, 1]

l = [1, 2, 3];
l.pop();
print l; // expected: [1, 2]
l.pop();
print l; // expected: [1]
l.pop();
print l; // expected: []
l.pop();
print l; // expected: []

l = [1, 2, 3, 4, 3];
l.reverse();
print l; // expected: [3, 4, 3, 2, 1]

print [[1, 2], [1, 2], (1, 2)].count([1, 2]); // expected: 2
